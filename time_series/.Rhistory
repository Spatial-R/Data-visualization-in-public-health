?read.csv
dat.aqi<-read.csv("AQI.csv",header=T,stringsAsFactors = F)
head(dat.aqi)
AQI<-read.csv("AQI.csv",header=T,stringsAsFactors = F);
names(AQI)<-c("city","date","aqi","degree","pollutant1","pollutant2","pollutant3")
AQI<-filter(AQI,aqi>0);AQI<-mutate(AQI,date=as.Date(date))
head(AQI)
library(dplyr);library(reshape)
AQI<-filter(AQI,aqi>0);AQI<-mutate(AQI,date=as.Date(date))
head(AQI)
AQI.BJ<-filter(AQI,city=="北京市")
head(AQI)
str(AQI)
AQI.BJ<-filter(AQI,city=="北京市")
AQI.BJ
str(AQI.BJ)
?stats::plot
??stats::plot
ts.plot(ldeaths, mdeaths, fdeaths,
gpars=list(xlab="year", ylab="deaths", lty=c(1:3)))
mdeaths
str( mdeaths)
??xyplot
library(lattice)
??xyplot
?xyplot
Depth <- equal.count(quakes$depth, number=8, overlap=.1)
xyplot(lat ~ long | Depth, data = quakes)
update(trellis.last.object(),
strip = strip.custom(strip.names = TRUE, strip.levels = TRUE),
par.strip.text = list(cex = 0.75),
aspect = "iso")
EE <- equal.count(ethanol$E, number=9, overlap=1/4)
## Constructing panel functions on the fly; prepanel
xyplot(NOx ~ C | EE, data = ethanol,
prepanel = function(x, y) prepanel.loess(x, y, span = 1),
xlab = "Compression Ratio", ylab = "NOx (micrograms/J)",
panel = function(x, y) {
panel.grid(h = -1, v = 2)
panel.xyplot(x, y)
panel.loess(x, y, span=1)
},
aspect = "xy")
?plot.zoo
?chartSeries
??chartSeries
？xts::plot.xts
？xts::plot.xts
?xts::plot.xts
?xts
?timeSeries::plot
LPP <- LPP2005REC[1:12, 1:4]
colnames(LPP) <- abbreviate(colnames(LPP), 2)
finCenter(LPP) <- "GMT"
## Example Plot 1 -
plot(LPP[, 1], type = "o", col = "steelblue",
main = "LPP", xlab = "2005", ylab = "Return")
library(timeSeries)
LPP <- LPP2005REC[1:12, 1:4]
colnames(LPP) <- abbreviate(colnames(LPP), 2)
finCenter(LPP) <- "GMT"
## Example Plot 1 -
plot(LPP[, 1], type = "o", col = "steelblue",
main = "LPP", xlab = "2005", ylab = "Return")
timeSeries()
?timeSeries()
data(economics, package = "ggplot2")
econ <- transform(economics, date = as.character(date))
econ
xtsMelt <- function(xtsData,metric){
df <- data.frame(index(xtsData),coredata(xtsData),stringsAsFactors=FALSE)
df.melt <- melt(df,id.vars=1)
df.melt <- data.frame(df.melt,rep(metric,NROW(df.melt)))
#little unnecessary housekeeping
df.melt <- df.melt[,c(1,2,4,3)]
colnames(df.melt) <- c("date","indexname","metric","value")
df.melt$date <- as.Date(df.melt$date)
#javascript works better when there are no .
#remove troublesome . using modified method from Stack Overflow
i <- sapply(df.melt, is.factor)
df.melt[i] <- lapply(df.melt[i], gsub, pattern="\\.", replacement="")
return(df.melt)
}
sp500.melt <- xtsMelt(
AQI.SH,
metric = "price"
)
??iindex
??index
library(rCharts)
??index
library(xts)
??index
?index
sp500.melt <- xtsMelt(
AQI.SH,
metric = "price"
)
AQI.SH<-filter(AQI,city=="上海市")
library(dplyr)
AQI.SH<-filter(AQI,city=="上海市")
?xts
AQI.HS<-filter(AQI,city %in% c("杭州市","深圳市"))
AQI.HS<-dplyr::filter(AQI,city %in% c("杭州市","深圳市"))
head(AQI.HS)
AQI.HS<-dplyr::filter(AQI,city %in% c("杭州市","深圳市"))[,1:3]
head(AQI.HS)
cast(AQI.HS,date+aqi~city)
cast(AQI.HS,date~city)
AQI.RC<-cast(AQI.HS,date~city)
n1 <- nPlot(
value~date,
data = AQI.RC,
group = "indexname",  # even though only one series need to specify group
type = "lineWithFocusChart"
)
n1
n1 <- nPlot(
杭州市~date,
data = AQI.RC,
group = "indexname",  # even though only one series need to specify group
type = "lineWithFocusChart"
)
n1
eecon
econ
m1 <- mPlot(
x = "date", y = c("杭州市","深圳市"),
data = AQI.HS,
type = "Line"
)
m1$set( pointSize = 0 )
m1$set( hideHover = "auto" )
m1
AQI.HS$date<-as.character(AQI.HS$date)
m1 <- mPlot(
x = "date", y = c("杭州市","深圳市"),
data = AQI.HS,
type = "Line"
)
m1$set( pointSize = 0 )
m1$set( hideHover = "auto" )
m1
str(AQI.HS)
AQI.RC<-cast(AQI.HS,date~city);AQI.RC$date<-as.character(AQI.RC$date)
m1 <- mPlot(
x = "date", y = c("杭州市","深圳市"),
data = AQI.RC,
type = "Line"
)
m1
names(AQI.RC)<-c("date","Hangzhou","Shenzheng")
m1 <- mPlot(
x = "date", y = c("Hangzhou","Shenzheng"),
data = AQI.RC,
type = "Line"
)
m1$set( pointSize = 0 )
m1$set( hideHover = "auto" )
m1
head(AQI)
AQI.HS$date <- as.double(as.POSIXct(AQI.HS$date,origin="1970-01-01"))
r1 <- Rickshaw$new()
r1$layer(
aqi~ date,group="city",
data = AQI.HS,
type = "line"
)
r1$set(
slider = TRUE
)
r1
AQI.HS
AQI.HS$city<-ifelse(AQI.HS$city=="杭州市","Hangzhou","Shenzheng")
r1 <- Rickshaw$new()
r1$layer(
aqi~ date,group="city",
data = AQI.HS,
type = "line"
)
r1$set(
slider = TRUE
)
r1
AQI.HS$date <- as.double(as.POSIXct(AQI.HS$date,origin="1970-01-01"))/100000
AQI.HS
AQI.HS<-dplyr::filter(AQI,city %in% c("杭州市","深圳市"))[,1:3]
AQI.HS$city<-ifelse(AQI.HS$city=="杭州市","Hangzhou","Shenzheng")
r1 <- Rickshaw$new()
r1$layer(
aqi~ date,group="city",
data = AQI.HS,
type = "line"
)
r1$set(
slider = TRUE
)
r1
AQI.HS$date <- as.double(as.POSIXct(AQI.HS$date,origin="1970-01-01"))
AQI.HS$date
AQI.RC$date <- as.numeric(
as.POSIXct(AQI.RC$date, origin="1970-01-01")
) * 1000
h1 <- hPlot(
Hangzhou ~ date,
data = AQI.RC,
type = "line"
)
h1$xAxis(type = "datetime")
h1$chart(zoomType = "x")
h1
AQI.HSW<-dplyr::filter(AQI,city %in% c("杭州市","深圳市","武汉市"))[,1:3]
AQI.HSW$city<-factor(AQI.HSW$city,levels=c("杭州市","深圳市","武汉市"),
labels=c("Hangzhou","Shenzheng","Wuhan")
AQI.HSW$date <- as.numeric(
as.POSIXct(AQI.HSW$date, origin="1970-01-01")
) * 1000
h1 <- hPlot(
aqi~ date,group="city",
data = AQI.HSW,
type = "line"
)
h1$xAxis(type = "datetime")
h1$chart(zoomType = "x")
h1$plotOptions(
line = list(
marker = list(enabled = F)
)
)
AQI.HSW<-dplyr::filter(AQI,city %in% c("杭州市","深圳市","武汉市"))[,1:3]
AQI.HSW$city<-factor(AQI.HSW$city,levels=c("杭州市","深圳市","武汉市"),
labels=c("Hangzhou","Shenzheng","Wuhan"))
AQI.HSW$date <- as.numeric(
as.POSIXct(AQI.HSW$date, origin="1970-01-01")
) * 1000
h1 <- hPlot(
aqi~ date,group="city",
data = AQI.HSW,
type = "line"
)
h1$xAxis(type = "datetime")
h1$chart(zoomType = "x")
h1$plotOptions(
line = list(
marker = list(enabled = F)
)
)
h1
